{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\new-pro\\\\new-pro\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { React } from \"react\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst page = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    id: props.meetupData.id,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  const id = context.params.meetupId; //fetch dta for a single meetupret\n\n  return {\n    props: {\n      meetupData: {\n        id: id,\n        image: \"https://image.shutterstock.com/z/stock-photo-large-thick-industrial-black-metal-chain-close-up-horizontal-front-side-view-the-isolated-object-1081708619.jpg\",\n        title: \"ttiittllee\",\n        address: \"asdfghjkl\",\n        description: \"sesccccccc desccccccc\"\n      }\n    }\n  };\n}\nexport async function getStaticPaths() {\n  //\n  const client = await MongoClient.connect(\"mongodb+srv://admin-Shiyadh:Shiyadh1212@cluster0.uzrul.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupsId = await meetupsCollection.find({}, {\n    _id: 1\n  });\n  return {\n    fallback: true,\n    paths: meetupsId.map(i => {\n      return {\n        params: {\n          meetupId: i._id.toString()\n        }\n      };\n    })\n  };\n}\nexport default page;","map":{"version":3,"sources":["C:/Users/hp/Downloads/new-pro/new-pro/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetail","MongoClient","page","props","meetupData","image","id","title","address","description","getStaticProps","context","params","meetupId","getStaticPaths","client","connect","db","meetupsCollection","collection","meetupsId","find","_id","fallback","paths","map","i","toString"],"mappings":";;AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,EAAE,EAAEF,KAAK,CAACC,UAAN,CAAiBE,EAFvB;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAH1B;AAIE,IAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI,OAJ5B;AAKE,IAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBK;AALhC;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;AAYA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAML,EAAE,GAAGK,OAAO,CAACC,MAAR,CAAeC,QAA1B,CAD4C,CAE5C;;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVE,QAAAA,EAAE,EAAEA,EADM;AAEVD,QAAAA,KAAK,EACH,8JAHQ;AAIVE,QAAAA,KAAK,EAAE,YAJG;AAKVC,QAAAA,OAAO,EAAE,WALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,OAAO,eAAeK,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,wGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,SAAS,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,CAAxB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,KAAK,EAAEJ,SAAS,CAACK,GAAV,CAAeC,CAAD,IAAO;AAC1B,aAAO;AAAEd,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAEa,CAAC,CAACJ,GAAF,CAAMK,QAAN;AAAZ;AAAV,OAAP;AACD,KAFM;AAFF,GAAP;AAMD;AAED,eAAezB,IAAf","sourcesContent":["import { React } from \"react\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst page = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      id={props.meetupData.id}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    ></MeetupDetail>\r\n  );\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n  const id = context.params.meetupId;\r\n  //fetch dta for a single meetupret\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: id,\r\n        image:\r\n          \"https://image.shutterstock.com/z/stock-photo-large-thick-industrial-black-metal-chain-close-up-horizontal-front-side-view-the-isolated-object-1081708619.jpg\",\r\n        title: \"ttiittllee\",\r\n        address: \"asdfghjkl\",\r\n        description: \"sesccccccc desccccccc\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  //\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin-Shiyadh:Shiyadh1212@cluster0.uzrul.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetupsId = await meetupsCollection.find({}, { _id: 1 });\r\n\r\n  return {\r\n    fallback: true,\r\n    paths: meetupsId.map((i) => {\r\n      return { params: { meetupId: i._id.toString() } };\r\n    }),\r\n  };\r\n}\r\n\r\nexport default page;\r\n"]},"metadata":{},"sourceType":"module"}