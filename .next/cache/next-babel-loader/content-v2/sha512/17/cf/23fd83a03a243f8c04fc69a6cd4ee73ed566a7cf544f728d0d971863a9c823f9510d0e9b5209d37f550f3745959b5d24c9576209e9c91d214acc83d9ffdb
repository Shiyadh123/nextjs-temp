{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\new-pro\\\\new-pro\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { React } from \"react\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst page = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.data.image,\n    id: props.meetupData._id,\n    title: props.meetupData.data.title,\n    address: props.meetupData.data.address,\n    description: props.meetupData.data.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  const id = context.params.meetupId; //fetch dta for a single meetupret\n\n  const client = await MongoClient.connect(\"mongodb+srv://admin-Shiyadh:Shiyadh1212@cluster0.uzrul.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetup = await meetupsCollection.findOne({\n    _id: id\n  }).toArray();\n  console.log(meetup);\n  client.close();\n  return {\n    props: {\n      meetupData: meetup\n    }\n  };\n}\nexport async function getStaticPaths() {\n  //\n  const client = await MongoClient.connect(\"mongodb+srv://admin-Shiyadh:Shiyadh1212@cluster0.uzrul.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupsId = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  const pathsIds = meetupsId.map(i => {\n    return {\n      params: {\n        meetupId: i._id.toString()\n      }\n    };\n  });\n  return {\n    fallback: true,\n    paths: pathsIds\n  };\n}\nexport default page;","map":{"version":3,"sources":["C:/Users/hp/Downloads/new-pro/new-pro/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetail","MongoClient","page","props","meetupData","data","image","_id","title","address","description","getStaticProps","context","id","params","meetupId","client","connect","db","meetupsCollection","collection","meetup","findOne","toArray","console","log","close","getStaticPaths","meetupsId","find","pathsIds","map","i","toString","fallback","paths"],"mappings":";;AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,IAAjB,CAAsBC,KAD/B;AAEE,IAAA,EAAE,EAAEH,KAAK,CAACC,UAAN,CAAiBG,GAFvB;AAGE,IAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,IAAjB,CAAsBG,KAH/B;AAIE,IAAA,OAAO,EAAEL,KAAK,CAACC,UAAN,CAAiBC,IAAjB,CAAsBI,OAJjC;AAKE,IAAA,WAAW,EAAEN,KAAK,CAACC,UAAN,CAAiBC,IAAjB,CAAsBK;AALrC;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;AAYA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,EAAE,GAAGD,OAAO,CAACE,MAAR,CAAeC,QAA1B,CAD4C,CAE5C;;AACA,QAAMC,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CACnB,wGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEf,IAAAA,GAAG,EAAEM;AAAP,GAA1B,EAAuCU,OAAvC,EAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEAL,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AACLvB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEiB;AADP;AADF,GAAP;AAKD;AAED,OAAO,eAAeM,cAAf,GAAgC;AACrC;AACA,QAAMX,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CACnB,wGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMQ,SAAS,GAAG,MAAMT,iBAAiB,CAACU,IAAlB,CAAuB,EAAvB,EAA2B;AAAEtB,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCgB,OAAvC,EAAxB;AAEAP,EAAAA,MAAM,CAACU,KAAP;AAEA,QAAMI,QAAQ,GAAGF,SAAS,CAACG,GAAV,CAAeC,CAAD,IAAO;AACpC,WAAO;AAAElB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEiB,CAAC,CAACzB,GAAF,CAAM0B,QAAN;AAAZ;AAAV,KAAP;AACD,GAFgB,CAAjB;AAIA,SAAO;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,KAAK,EAAEL;AAFF,GAAP;AAID;AAED,eAAe5B,IAAf","sourcesContent":["import { React } from \"react\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst page = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.data.image}\r\n      id={props.meetupData._id}\r\n      title={props.meetupData.data.title}\r\n      address={props.meetupData.data.address}\r\n      description={props.meetupData.data.description}\r\n    ></MeetupDetail>\r\n  );\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n  const id = context.params.meetupId;\r\n  //fetch dta for a single meetupret\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin-Shiyadh:Shiyadh1212@cluster0.uzrul.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetup = await meetupsCollection.findOne({ _id: id }).toArray();\r\n  console.log(meetup);\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: meetup,\r\n    },\r\n  };\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  //\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin-Shiyadh:Shiyadh1212@cluster0.uzrul.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetupsId = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  const pathsIds = meetupsId.map((i) => {\r\n    return { params: { meetupId: i._id.toString() } };\r\n  });\r\n\r\n  return {\r\n    fallback: true,\r\n    paths: pathsIds,\r\n  };\r\n}\r\n\r\nexport default page;\r\n"]},"metadata":{},"sourceType":"module"}