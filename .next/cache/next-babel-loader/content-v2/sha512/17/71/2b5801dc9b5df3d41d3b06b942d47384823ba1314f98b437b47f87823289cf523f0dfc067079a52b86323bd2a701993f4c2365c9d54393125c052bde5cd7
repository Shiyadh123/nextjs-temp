{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\new-pro\\\\new-pro\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport { React } from \"react\";\nimport { Fragment } from \"react \";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from \"next/head\";\n\nvar page = function page(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"props.meetupData.data.title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: props.meetupData._id,\n      image: props.meetupData.data.image,\n      title: props.meetupData.data.title,\n      address: props.meetupData.data.address,\n      description: props.meetupData.data.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n\nexport var __N_SSG = true;\nexport default page;","map":{"version":3,"sources":["C:/Users/hp/Downloads/new-pro/new-pro/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetail","Head","page","props","meetupData","_id","data","image","title","address","description"],"mappings":";;;;;AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,YAAD;AACE,MAAA,EAAE,EAAEA,KAAK,CAACC,UAAN,CAAiBC,GADvB;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,IAAjB,CAAsBC,KAF/B;AAGE,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBE,IAAjB,CAAsBE,KAH/B;AAIE,MAAA,OAAO,EAAEL,KAAK,CAACC,UAAN,CAAiBE,IAAjB,CAAsBG,OAJjC;AAKE,MAAA,WAAW,EAAEN,KAAK,CAACC,UAAN,CAAiBE,IAAjB,CAAsBI;AALrC;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAfD;;;AAiEA,eAAeR,IAAf","sourcesContent":["import { React } from \"react\";\r\nimport { Fragment } from \"react \";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport Head from \"next/head\";\r\n\r\nconst page = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>props.meetupData.data.title</title>\r\n      </Head>\r\n      <MeetupDetail\r\n        id={props.meetupData._id}\r\n        image={props.meetupData.data.image}\r\n        title={props.meetupData.data.title}\r\n        address={props.meetupData.data.address}\r\n        description={props.meetupData.data.description}\r\n      ></MeetupDetail>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n  const id = context.params.meetupId;\r\n  //fetch dta for a single meetupret\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin-Shiyadh:Shiyadh1212@cluster0.uzrul.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetup = await meetupsCollection.findOne({ _id: ObjectId(id) });\r\n  console.log(meetup);\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        ...meetup,\r\n        _id: meetup._id.toString(),\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  //\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin-Shiyadh:Shiyadh1212@cluster0.uzrul.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetupsId = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  const pathsIds = meetupsId.map((i) => {\r\n    return { params: { meetupId: i._id.toString() } };\r\n  });\r\n\r\n  return {\r\n    fallback: true,\r\n    paths: pathsIds,\r\n  };\r\n}\r\n\r\nexport default page;\r\n"]},"metadata":{},"sourceType":"module"}